//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PWSHackathonClient.PSW_Service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/PWSHackathonWCF")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Line1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Line2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Line3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Line4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RiskAssessmentSupplyRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMail {
            get {
                return this.EMailField;
            }
            set {
                if ((object.ReferenceEquals(this.EMailField, value) != true)) {
                    this.EMailField = value;
                    this.RaisePropertyChanged("EMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Line1 {
            get {
                return this.Line1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Line1Field, value) != true)) {
                    this.Line1Field = value;
                    this.RaisePropertyChanged("Line1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Line2 {
            get {
                return this.Line2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Line2Field, value) != true)) {
                    this.Line2Field = value;
                    this.RaisePropertyChanged("Line2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Line3 {
            get {
                return this.Line3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Line3Field, value) != true)) {
                    this.Line3Field = value;
                    this.RaisePropertyChanged("Line3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Line4 {
            get {
                return this.Line4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Line4Field, value) != true)) {
                    this.Line4Field = value;
                    this.RaisePropertyChanged("Line4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RiskAssessmentSupplyRef {
            get {
                return this.RiskAssessmentSupplyRefField;
            }
            set {
                if ((object.ReferenceEquals(this.RiskAssessmentSupplyRefField, value) != true)) {
                    this.RiskAssessmentSupplyRefField = value;
                    this.RaisePropertyChanged("RiskAssessmentSupplyRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TelephoneNumber {
            get {
                return this.TelephoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneNumberField, value) != true)) {
                    this.TelephoneNumberField = value;
                    this.RaisePropertyChanged("TelephoneNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RiskAssessment", Namespace="http://schemas.datacontract.org/2004/07/PWSHackathonWCF")]
    [System.SerializableAttribute()]
    public partial class RiskAssessment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalAuthorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplyReferenceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalAuthority {
            get {
                return this.LocalAuthorityField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalAuthorityField, value) != true)) {
                    this.LocalAuthorityField = value;
                    this.RaisePropertyChanged("LocalAuthority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplyName {
            get {
                return this.SupplyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplyNameField, value) != true)) {
                    this.SupplyNameField = value;
                    this.RaisePropertyChanged("SupplyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplyReference {
            get {
                return this.SupplyReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplyReferenceField, value) != true)) {
                    this.SupplyReferenceField = value;
                    this.RaisePropertyChanged("SupplyReference");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RiskQuestion", Namespace="http://schemas.datacontract.org/2004/07/PWSHackathonWCF")]
    [System.SerializableAttribute()]
    public partial class RiskQuestion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHazardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LikelihoodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RiskAssessmentSupplyReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RiskNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeverityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHazard {
            get {
                return this.IsHazardField;
            }
            set {
                if ((this.IsHazardField.Equals(value) != true)) {
                    this.IsHazardField = value;
                    this.RaisePropertyChanged("IsHazard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Likelihood {
            get {
                return this.LikelihoodField;
            }
            set {
                if ((this.LikelihoodField.Equals(value) != true)) {
                    this.LikelihoodField = value;
                    this.RaisePropertyChanged("Likelihood");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Response {
            get {
                return this.ResponseField;
            }
            set {
                if ((this.ResponseField.Equals(value) != true)) {
                    this.ResponseField = value;
                    this.RaisePropertyChanged("Response");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RiskAssessmentSupplyReference {
            get {
                return this.RiskAssessmentSupplyReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.RiskAssessmentSupplyReferenceField, value) != true)) {
                    this.RiskAssessmentSupplyReferenceField = value;
                    this.RaisePropertyChanged("RiskAssessmentSupplyReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RiskNumber {
            get {
                return this.RiskNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RiskNumberField, value) != true)) {
                    this.RiskNumberField = value;
                    this.RaisePropertyChanged("RiskNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Severity {
            get {
                return this.SeverityField;
            }
            set {
                if ((this.SeverityField.Equals(value) != true)) {
                    this.SeverityField = value;
                    this.RaisePropertyChanged("Severity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PSW_Service.IAddressService")]
    public interface IAddressService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/GetAddress", ReplyAction="http://tempuri.org/IAddressService/GetAddressResponse")]
        PWSHackathonClient.PSW_Service.Address GetAddress(string postcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/GetAddress", ReplyAction="http://tempuri.org/IAddressService/GetAddressResponse")]
        System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.Address> GetAddressAsync(string postcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/CreateAddress", ReplyAction="http://tempuri.org/IAddressService/CreateAddressResponse")]
        PWSHackathonClient.PSW_Service.Address CreateAddress(PWSHackathonClient.PSW_Service.Address address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/CreateAddress", ReplyAction="http://tempuri.org/IAddressService/CreateAddressResponse")]
        System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.Address> CreateAddressAsync(PWSHackathonClient.PSW_Service.Address address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/DeleteAddress", ReplyAction="http://tempuri.org/IAddressService/DeleteAddressResponse")]
        PWSHackathonClient.PSW_Service.Address DeleteAddress(PWSHackathonClient.PSW_Service.Address address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/DeleteAddress", ReplyAction="http://tempuri.org/IAddressService/DeleteAddressResponse")]
        System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.Address> DeleteAddressAsync(PWSHackathonClient.PSW_Service.Address address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/UpdateAddress", ReplyAction="http://tempuri.org/IAddressService/UpdateAddressResponse")]
        PWSHackathonClient.PSW_Service.Address UpdateAddress(PWSHackathonClient.PSW_Service.Address address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/UpdateAddress", ReplyAction="http://tempuri.org/IAddressService/UpdateAddressResponse")]
        System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.Address> UpdateAddressAsync(PWSHackathonClient.PSW_Service.Address address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/GetAllAddresses", ReplyAction="http://tempuri.org/IAddressService/GetAllAddressesResponse")]
        PWSHackathonClient.PSW_Service.Address[] GetAllAddresses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/GetAllAddresses", ReplyAction="http://tempuri.org/IAddressService/GetAllAddressesResponse")]
        System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.Address[]> GetAllAddressesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAddressServiceChannel : PWSHackathonClient.PSW_Service.IAddressService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddressServiceClient : System.ServiceModel.ClientBase<PWSHackathonClient.PSW_Service.IAddressService>, PWSHackathonClient.PSW_Service.IAddressService {
        
        public AddressServiceClient() {
        }
        
        public AddressServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AddressServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddressServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddressServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PWSHackathonClient.PSW_Service.Address GetAddress(string postcode) {
            return base.Channel.GetAddress(postcode);
        }
        
        public System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.Address> GetAddressAsync(string postcode) {
            return base.Channel.GetAddressAsync(postcode);
        }
        
        public PWSHackathonClient.PSW_Service.Address CreateAddress(PWSHackathonClient.PSW_Service.Address address) {
            return base.Channel.CreateAddress(address);
        }
        
        public System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.Address> CreateAddressAsync(PWSHackathonClient.PSW_Service.Address address) {
            return base.Channel.CreateAddressAsync(address);
        }
        
        public PWSHackathonClient.PSW_Service.Address DeleteAddress(PWSHackathonClient.PSW_Service.Address address) {
            return base.Channel.DeleteAddress(address);
        }
        
        public System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.Address> DeleteAddressAsync(PWSHackathonClient.PSW_Service.Address address) {
            return base.Channel.DeleteAddressAsync(address);
        }
        
        public PWSHackathonClient.PSW_Service.Address UpdateAddress(PWSHackathonClient.PSW_Service.Address address) {
            return base.Channel.UpdateAddress(address);
        }
        
        public System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.Address> UpdateAddressAsync(PWSHackathonClient.PSW_Service.Address address) {
            return base.Channel.UpdateAddressAsync(address);
        }
        
        public PWSHackathonClient.PSW_Service.Address[] GetAllAddresses() {
            return base.Channel.GetAllAddresses();
        }
        
        public System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.Address[]> GetAllAddressesAsync() {
            return base.Channel.GetAllAddressesAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PSW_Service.IRiskAssessmentService")]
    public interface IRiskAssessmentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskAssessmentService/GetRiskAssessment", ReplyAction="http://tempuri.org/IRiskAssessmentService/GetRiskAssessmentResponse")]
        PWSHackathonClient.PSW_Service.RiskAssessment GetRiskAssessment(string supplyReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskAssessmentService/GetRiskAssessment", ReplyAction="http://tempuri.org/IRiskAssessmentService/GetRiskAssessmentResponse")]
        System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.RiskAssessment> GetRiskAssessmentAsync(string supplyReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskAssessmentService/CreateRiskAssessment", ReplyAction="http://tempuri.org/IRiskAssessmentService/CreateRiskAssessmentResponse")]
        PWSHackathonClient.PSW_Service.RiskAssessment CreateRiskAssessment(PWSHackathonClient.PSW_Service.RiskAssessment riskAssessment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskAssessmentService/CreateRiskAssessment", ReplyAction="http://tempuri.org/IRiskAssessmentService/CreateRiskAssessmentResponse")]
        System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.RiskAssessment> CreateRiskAssessmentAsync(PWSHackathonClient.PSW_Service.RiskAssessment riskAssessment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskAssessmentService/DeleteRiskAssessment", ReplyAction="http://tempuri.org/IRiskAssessmentService/DeleteRiskAssessmentResponse")]
        PWSHackathonClient.PSW_Service.RiskAssessment DeleteRiskAssessment(PWSHackathonClient.PSW_Service.RiskAssessment riskAssessment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskAssessmentService/DeleteRiskAssessment", ReplyAction="http://tempuri.org/IRiskAssessmentService/DeleteRiskAssessmentResponse")]
        System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.RiskAssessment> DeleteRiskAssessmentAsync(PWSHackathonClient.PSW_Service.RiskAssessment riskAssessment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskAssessmentService/UpdateRiskAssessment", ReplyAction="http://tempuri.org/IRiskAssessmentService/UpdateRiskAssessmentResponse")]
        PWSHackathonClient.PSW_Service.RiskAssessment UpdateRiskAssessment(PWSHackathonClient.PSW_Service.RiskAssessment riskAssessment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskAssessmentService/UpdateRiskAssessment", ReplyAction="http://tempuri.org/IRiskAssessmentService/UpdateRiskAssessmentResponse")]
        System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.RiskAssessment> UpdateRiskAssessmentAsync(PWSHackathonClient.PSW_Service.RiskAssessment riskAssessment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskAssessmentService/GetAllRiskAssessments", ReplyAction="http://tempuri.org/IRiskAssessmentService/GetAllRiskAssessmentsResponse")]
        PWSHackathonClient.PSW_Service.RiskAssessment[] GetAllRiskAssessments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskAssessmentService/GetAllRiskAssessments", ReplyAction="http://tempuri.org/IRiskAssessmentService/GetAllRiskAssessmentsResponse")]
        System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.RiskAssessment[]> GetAllRiskAssessmentsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRiskAssessmentServiceChannel : PWSHackathonClient.PSW_Service.IRiskAssessmentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RiskAssessmentServiceClient : System.ServiceModel.ClientBase<PWSHackathonClient.PSW_Service.IRiskAssessmentService>, PWSHackathonClient.PSW_Service.IRiskAssessmentService {
        
        public RiskAssessmentServiceClient() {
        }
        
        public RiskAssessmentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RiskAssessmentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RiskAssessmentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RiskAssessmentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PWSHackathonClient.PSW_Service.RiskAssessment GetRiskAssessment(string supplyReference) {
            return base.Channel.GetRiskAssessment(supplyReference);
        }
        
        public System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.RiskAssessment> GetRiskAssessmentAsync(string supplyReference) {
            return base.Channel.GetRiskAssessmentAsync(supplyReference);
        }
        
        public PWSHackathonClient.PSW_Service.RiskAssessment CreateRiskAssessment(PWSHackathonClient.PSW_Service.RiskAssessment riskAssessment) {
            return base.Channel.CreateRiskAssessment(riskAssessment);
        }
        
        public System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.RiskAssessment> CreateRiskAssessmentAsync(PWSHackathonClient.PSW_Service.RiskAssessment riskAssessment) {
            return base.Channel.CreateRiskAssessmentAsync(riskAssessment);
        }
        
        public PWSHackathonClient.PSW_Service.RiskAssessment DeleteRiskAssessment(PWSHackathonClient.PSW_Service.RiskAssessment riskAssessment) {
            return base.Channel.DeleteRiskAssessment(riskAssessment);
        }
        
        public System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.RiskAssessment> DeleteRiskAssessmentAsync(PWSHackathonClient.PSW_Service.RiskAssessment riskAssessment) {
            return base.Channel.DeleteRiskAssessmentAsync(riskAssessment);
        }
        
        public PWSHackathonClient.PSW_Service.RiskAssessment UpdateRiskAssessment(PWSHackathonClient.PSW_Service.RiskAssessment riskAssessment) {
            return base.Channel.UpdateRiskAssessment(riskAssessment);
        }
        
        public System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.RiskAssessment> UpdateRiskAssessmentAsync(PWSHackathonClient.PSW_Service.RiskAssessment riskAssessment) {
            return base.Channel.UpdateRiskAssessmentAsync(riskAssessment);
        }
        
        public PWSHackathonClient.PSW_Service.RiskAssessment[] GetAllRiskAssessments() {
            return base.Channel.GetAllRiskAssessments();
        }
        
        public System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.RiskAssessment[]> GetAllRiskAssessmentsAsync() {
            return base.Channel.GetAllRiskAssessmentsAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PSW_Service.IRiskQuestionService")]
    public interface IRiskQuestionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskQuestionService/CreateBlankRisks", ReplyAction="http://tempuri.org/IRiskQuestionService/CreateBlankRisksResponse")]
        PWSHackathonClient.PSW_Service.RiskQuestion[] CreateBlankRisks(string riskAssessmentSupplyReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskQuestionService/CreateBlankRisks", ReplyAction="http://tempuri.org/IRiskQuestionService/CreateBlankRisksResponse")]
        System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.RiskQuestion[]> CreateBlankRisksAsync(string riskAssessmentSupplyReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskQuestionService/UpdateRiskQuestion", ReplyAction="http://tempuri.org/IRiskQuestionService/UpdateRiskQuestionResponse")]
        PWSHackathonClient.PSW_Service.RiskQuestion UpdateRiskQuestion(PWSHackathonClient.PSW_Service.RiskQuestion riskQuestion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskQuestionService/UpdateRiskQuestion", ReplyAction="http://tempuri.org/IRiskQuestionService/UpdateRiskQuestionResponse")]
        System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.RiskQuestion> UpdateRiskQuestionAsync(PWSHackathonClient.PSW_Service.RiskQuestion riskQuestion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskQuestionService/GetRiskQuestionsForRiskAssessment", ReplyAction="http://tempuri.org/IRiskQuestionService/GetRiskQuestionsForRiskAssessmentResponse" +
            "")]
        PWSHackathonClient.PSW_Service.RiskQuestion[] GetRiskQuestionsForRiskAssessment(string riskAssessmentSupplierRefId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRiskQuestionService/GetRiskQuestionsForRiskAssessment", ReplyAction="http://tempuri.org/IRiskQuestionService/GetRiskQuestionsForRiskAssessmentResponse" +
            "")]
        System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.RiskQuestion[]> GetRiskQuestionsForRiskAssessmentAsync(string riskAssessmentSupplierRefId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRiskQuestionServiceChannel : PWSHackathonClient.PSW_Service.IRiskQuestionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RiskQuestionServiceClient : System.ServiceModel.ClientBase<PWSHackathonClient.PSW_Service.IRiskQuestionService>, PWSHackathonClient.PSW_Service.IRiskQuestionService {
        
        public RiskQuestionServiceClient() {
        }
        
        public RiskQuestionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RiskQuestionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RiskQuestionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RiskQuestionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PWSHackathonClient.PSW_Service.RiskQuestion[] CreateBlankRisks(string riskAssessmentSupplyReference) {
            return base.Channel.CreateBlankRisks(riskAssessmentSupplyReference);
        }
        
        public System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.RiskQuestion[]> CreateBlankRisksAsync(string riskAssessmentSupplyReference) {
            return base.Channel.CreateBlankRisksAsync(riskAssessmentSupplyReference);
        }
        
        public PWSHackathonClient.PSW_Service.RiskQuestion UpdateRiskQuestion(PWSHackathonClient.PSW_Service.RiskQuestion riskQuestion) {
            return base.Channel.UpdateRiskQuestion(riskQuestion);
        }
        
        public System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.RiskQuestion> UpdateRiskQuestionAsync(PWSHackathonClient.PSW_Service.RiskQuestion riskQuestion) {
            return base.Channel.UpdateRiskQuestionAsync(riskQuestion);
        }
        
        public PWSHackathonClient.PSW_Service.RiskQuestion[] GetRiskQuestionsForRiskAssessment(string riskAssessmentSupplierRefId) {
            return base.Channel.GetRiskQuestionsForRiskAssessment(riskAssessmentSupplierRefId);
        }
        
        public System.Threading.Tasks.Task<PWSHackathonClient.PSW_Service.RiskQuestion[]> GetRiskQuestionsForRiskAssessmentAsync(string riskAssessmentSupplierRefId) {
            return base.Channel.GetRiskQuestionsForRiskAssessmentAsync(riskAssessmentSupplierRefId);
        }
    }
}
